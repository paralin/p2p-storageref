syntax = "proto3";
package storageref;

// StorageRef references storage.
message StorageRef {
  // StorageType contains the type of storage this references.
  StorageType storage_type = 1;
  // ObjectDigest contains the digest of the decrypted object.
  // Optional.
  bytes object_digest = 3;
  // Ipfs contains a IPFS storage reference.
  StorageRefIPFS ipfs = 2;
  // Digest contains a digest-only reference (empty at the moment).
  StorageRefDigest digest = 4;
  // InBand contains an in-band reference.
  StorageRefInBand in_band = 5;
}

// StorageType contains the possible types of storage.
enum StorageType {
  // StorageType_UNKNOWN holds unknown values.
  StorageType_UNKNOWN = 0;
  // StorageType_IPFS is the IPFS storage type.
  StorageType_IPFS = 1;
  // StorageType_DIGEST references a digest in local storage only by object multihash.
  StorageType_DIGEST = 2;
  // StorageType_INBAND stores object data in the storage reference itself, in-band.
  StorageType_INBAND = 3;
}

// StorageRefIPFS references an object in IPFS.
message StorageRefIPFS {
  // Reference contains the referenced multihash in string form.
  string reference = 1;
  // IpfsRefType indicates the type of IPFS reference type this is.
  IPFSRefType ipfs_ref_type = 2;
}

// IPFSRefType is an ipfs reference type.
enum IPFSRefType {
  // IPFSRefType_BLOCK is the default reference type, an IPFS block.
  IPFSRefType_BLOCK = 0;
  // IPFSRefType_OBJECT indicates the hash refers to a IPFS merkle object.
  IPFSRefType_OBJECT = 1;
}

// StorageRefDigest references an object by digest only.
message StorageRefDigest {
}

// StorageRefInBand references an object stored in-band.
message StorageRefInBand {
  // Data is the encoded object.
  bytes data = 1;
}